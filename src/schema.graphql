# import UserOrderByInput from './generated/prisma.graphql'

type Query {
  users(query: String, first: Int, skip: Int, after: String, orderBy: UserOrderByInput): [User!]!
  me: User!
  posts(query: String): [Post!]!
  comments(query: String): [Comment!]!
}

type Mutation {
  createUser(data: CreateUserInput!): AuthPayload!
}

type AuthPayload {
  token: String!
  user: User!
}

input CreateUserInput {
  name: String!
  email: String!
  password: String!
}

type User {
  id: ID!
  email: String!
  name: String
  posts: [Post!]!
  comments: [Comment!]!
}

type Post {
  id: ID!
  createdAt: String!
  updatedAt: String!
  title: String!
  content: String
  published: Boolean!
  author: User!
  comments: [Comment!]!
}

type Comment {
  id: ID!
  text: String!
  writtenBy: User!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}